constraints => digunakan untuk menentukan aturan untuk data dalam tabel.
Constraint dalam database merupakan batasan nilai yang dapat memastikan hanya data yang sesuai dengan constraint saja yang dapat di input kan dalam tabel.

CREATE TABLE table_name (
    column1 datatype constraint,
    column2 datatype constraint,
    column3 datatype constraint,
    ....
);

constraints => digunakan untuk membatasi jenis data yang dapat dimasukkan ke dalam tabel.
    1. Hal ini memastikan keakuratan dan keandalan data dalam tabel.
    2. Jika ada pelanggaran antara batasan dan tindakan data, tindakan tersebut dibatalkan.
    3. constraints dapat berupa tingkat kolom atau tingkat tabel.
    4. Batasan tingkat kolom berlaku untuk satu kolom, dan batasan tingkat tabel berlaku untuk seluruh tabel.

constraints berikut biasanya digunakan dalam SQL:
    NOT NULL                - Memastikan bahwa kolom tidak boleh memiliki nilai NULL
    UNIQUE                  - Memastikan semua nilai dalam kolom berbeda
    PRIMARY KEY             - Kombinasi a NOT NULL dan UNIQUE. Secara unik mengidentifikasi setiap baris dalam sebuah tabel
    FOREIGN KEY             - Mencegah tindakan yang akan merusak hubungan antar tabel
    CHECK                   - Memastikan bahwa nilai dalam kolom memenuhi kondisi tertentu
    DEFAULT                 - Menetapkan nilai default untuk kolom jika tidak ada nilai yang ditentukan
    CREATE INDEX            - Digunakan untuk membuat dan mengambil data dari database dengan sangat cepat


Contoh study kasus constraints
Mari kita lihat sebuah studi kasus sederhana tentang penggunaan constraints di sebuah database toko online.
Dalam database ini, kita akan memiliki tabel untuk produk, pelanggan, dan pesanan.
Mari kita lihat bagaimana constraints dapat diterapkan untuk memastikan integritas data dan konsistensi referensial:

1. Tabel Produk:
    Kolom: ID_Produk (Primary Key), Nama_Produk, Harga, dll.
    Constraint: Primary Key (ID_Produk), mungkin juga ada constraint Unique pada Nama_Produk.

2. Tabel Pelanggan:
    Kolom: ID_Pelanggan (Primary Key), Nama_Pelanggan, Email, Alamat, dll.
    Constraint: Primary Key (ID_Pelanggan), mungkin juga ada constraint Unique pada Email.

3. Tabel Pesanan:
    Kolom: ID_Pesanan (Primary Key), ID_Pelanggan (Foreign Key), ID_Produk (Foreign Key), Jumlah, Tanggal_Pesanan, dll.
    Constraint:
        Primary Key (ID_Pesanan),
        Foreign Key (ID_Pelanggan) REFERENCES Pelanggan(ID_Pelanggan) ON DELETE CASCADE ON UPDATE CASCADE. Ini akan memastikan bahwa jika ada pelanggan yang dihapus dari tabel Pelanggan, pesanan yang terkait juga dihapus.
        Foreign Key (ID_Produk) REFERENCES Produk(ID_Produk) ON DELETE RESTRICT ON UPDATE CASCADE. Ini memastikan bahwa produk yang terkait dengan pesanan tidak dapat dihapus selama masih ada pesanan yang terkait.